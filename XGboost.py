#!/usr/bin/env python3
# -*- coding: utf-8 -*-


# XGboost

# Importing the libraries
from sklearn.model_selection import cross_val_score
from sklearn.metrics import confusion_matrix
from xgboost import XGBClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

# Importing the dataset
dataset = pd.read_csv('data.csv', sep='|')
X = dataset.drop(['Name', 'md5', 'legitimate'], axis=1).values
y = dataset['legitimate'].values

# Splitting the dataset into the Training set and Test set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=0)

# Feature Scaling
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

# Fitting xgboost to the training Set
classifier = XGBClassifier(max_depth=20, learning_rate=0.3, n_estimators=150, verbose=10)
classifier.fit(X_train, y_train)

# predict the test results
y_pred = classifier.predict(X_test)

# Makeing the confusion matrix
cm = confusion_matrix(y_test, y_pred)
print(cm)

# Applying K-Fold cross validation
accuracies = cross_val_score(estimator=classifier, X=X_train, y=y_train, cv=10)
print(accuracies.mean())
print(accuracies.std())
